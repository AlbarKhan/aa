................PRACTICAL 1
class CaesarCipher{
	public static StringBuffer encrypt(String text ,int s){
		StringBuffer result = new StringBuffer();
		for (int i = 0 ; i < text.length();i++){
			if(Character.isUpperCase(text.charAt(i))){
				char ch = (char)(((int)text.charAt(i)+ s - 65) % 26 + 65);
				result.append(ch);
			}
			else{
				char ch = (char)(((int)text.charAt(i)+ s - 95) % 26 + 97);
				result.append(ch);
			}
		}
		return result;
	}
	public static void main(String[] args){
		System.out.println("Masood Sarguru");
		String text = "MASOODDAWOODKHANSARGURU";
		int s = 4;
		System.out.println("Text : " + text);
		System.out.println("Shift : " + s);
		System.out.println("Cipher : " + encrypt(text,s));
		
	}
}

..........................................................End//

....................................// MONOALPHABATIC START.......................//

import java.io.*;
class monoalphabetic{
	public static char normalChar[]={'a', 'b', 'c', 'd' ,'e', 'f', 'g',  'h',  'i', 
				 'j',  'k',  'l',  'm',  'n',  'o',  'p',  'q',
				  'r','s',  't', 'u',  'v',  'w',  'x',  'y', 'z'};

	public static char codedChar[]={'Q',  'W',  'E',  'R','T','Y','U','I','O',
				'P','A','S','D','F','G','H','J','K','L',
				'Z','X','C','V','B','N','M'};


	public static String stringEncryption(String s){
		String encryptedString="";
		for(int i=0;i<s.length();i++){
			for(int j=0;j<26;j++){
				if(s.charAt(i)==normalChar[j]){
					encryptedString +=codedChar[j];
					break;
				}
				if(s.charAt(i)  < 'a' || s.charAt(i)  >  'z'){
					encryptedString +=s.charAt(i);
				}
			}
		}
		return encryptedString;
		
	}

	 public static String stringDecryption(String s){
        		String decryptedString = "";
        		for (int i = 0; i < s.length(); i++){
		            for (int j = 0; j < 26; j++) {
		                if (s.charAt(i) == codedChar[j]){
		                    decryptedString += normalChar[j];
                    		    break;
                			}              
                			if (s.charAt(i) < 'A' || s.charAt(i) > 'Z'){
		                    decryptedString += s.charAt(i);
                    		   break;
                			}
            			}
       	 	}      
        		return decryptedString;
    }
   	 public static void main(String args[]){
	        String str = "Albar Khan ";
 

 	       System.out.println("Plain text: " + str);

 	       String encryptedString = stringEncryption(str.toLowerCase());
 

 	       System.out.println("Encrypted message: "
                           + encryptedString);
 

 	       System.out.println("Decrypted message: "
            	+ stringDecryption(encryptedString));
       
    }
}


.........................//RAILFENCE START//..............

import java.io.*;


class RailFence{
public static void main(String[]args)throws Exception{
BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
System.out.print("Enter Plain Text : ");
String pt = br.readLine();
System.out.print("Enter Depth : ");
int d= Integer.parseInt(br.readLine());
String ct = encrypt(pt,d);
System.out.println("Encrypted Text : " + ct);
String dText = decrypt(ct,d);
System.out.println("Decrypted Text : "+ dText);
}

public static String encrypt(String pt, int d){
String ct ="";
int r = 0,n = 1;
String[]arr=new String[d];

for(int i=0;i<pt.length();i++){
if(arr[r]==null)arr[r]="";
arr[r]+=pt.charAt(i);
r+=n;
if(r==(d-1)||r==0)n*=-1;
}
for(int i=0;i<arr.length;i++)ct+= arr[i];
return ct;
}
public static String decrypt(String ct,int d){
String pt ="";
int r=0,n=1;
int[]arrIndex=new int[d];
String[]arr=new String[d];
for(int i=0;i<ct.length();i++){
arrIndex[r]+=1;
r+=n;
if(r==(d-1)||r==0)n*=-1;
}
String temp =ct;
for(int i=0;i<d;i++){
arr[i]=temp.substring(0,arrIndex[i]);
temp=temp.substring(arrIndex[i],temp.length());
}
r=0;n=1;
while(pt.length() != ct.length()){
pt+=arr[r].charAt(0);
arr[r]=arr[r].substring(1,arr[r].length());
r+=n;
if(r==(d-1)||r==0)n*=-1;
}
return pt;
}
}





.........................//RAILFENCE END//..............

....................................// MONOALPHABATIC END.......................//